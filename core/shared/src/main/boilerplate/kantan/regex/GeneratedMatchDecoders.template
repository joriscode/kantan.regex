/*
 * Copyright 2016 Nicolas Rinaudo
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package kantan.regex

trait GeneratedMatchDecoders {
  [#def decoder[[#A1: GroupDecoder#], O]([#i1: Int#])(f: ([#A1#]) ⇒ O): MatchDecoder[O] = MatchDecoder.from { m ⇒
    for {
      [#a1 ← m.decode[A1](i1).right#
      ]
    } yield f([#a1#])
  }

  def ordered[[#A1: GroupDecoder#], O](f: ([#A1#]) ⇒ O): MatchDecoder[O] = decoder([#1#])(f)#

  ]

  [#def tuple[[#A1: GroupDecoder#]]([#i1: Int#]): MatchDecoder[Tuple1[[#A1#]]] =
    decoder([#i1#])(Tuple1.apply[[#A1#]])#

  ]
}
